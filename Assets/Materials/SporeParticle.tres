[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://Assets/Textures/spore_mask.png" type="Texture" id=1]

[sub_resource type="Shader" id=15]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode unshaded, async_visible,blend_mix,depth_draw_opaque, diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo_1 : hint_color;
uniform vec4 albedo_2 : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;


uniform sampler2D movement_noise;
uniform sampler2D mask;
uniform float speed = 0.14;

const vec2 dir1 = vec2(1.0, 1.0);
const vec2 dir2 = vec2(-1.0, 0.0);
const vec2 dir3 = vec2(-0.5, -0.5);

float random (vec2 uv) {
    return fract(sin(dot(uv.xy,
        vec2(12.9898,78.233))) * 43758.5453123);
}

vec2 rotate(vec2 uv, vec2 pivot, float angle)
{
	mat2 rotation = mat2(vec2(sin(angle), -cos(angle)),
						vec2(cos(angle), sin(angle)));
	
	uv -= pivot;
	uv = uv * rotation;
	uv += pivot;
	return uv;
}

varying float rand;

void vertex() {
	vec2 instance_id = vec2(float(INSTANCE_ID));
	float rand1 = fract(random(vec2(0.5 * instance_id.x, instance_id.y)));
	float rand2 = fract(random(-vec2(0.2 * instance_id.x, 0.01 * instance_id.y)));
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat4(CAMERA_MATRIX[0],CAMERA_MATRIX[1],CAMERA_MATRIX[2],WORLD_MATRIX[3]);
	VERTEX.x += 1.5 * (0.5 - texture(movement_noise, speed * (TIME+rand1)*vec2(rand1, rand2)).r);
	VERTEX.y += 1.5 * (0.5 - texture(movement_noise, speed * (TIME+rand2)*vec2(rand2, rand1)).r);
	VERTEX.z += 1.5 * (0.5 - texture(movement_noise, speed * (TIME+rand2)*vec2(rand1, rand2)).r);
	COLOR = mix(albedo_1, albedo_2, rand1); //INSTANCE_ID
	rand = rand1;
}




void fragment() {
	vec4 albedo_tex = texture(texture_albedo, UV);
	ALBEDO = COLOR.rgb;
	ALPHA = clamp(0.5+rand, 0.0, 1.0) * texture(mask, rotate(UV, vec2(0.5), rand*2.0*3.141)).r;
}

"

[sub_resource type="OpenSimplexNoise" id=18]
period = 145.7
persistence = 0.153
lacunarity = 1.08

[sub_resource type="NoiseTexture" id=19]
seamless = true
noise = SubResource( 18 )

[resource]
shader = SubResource( 15 )
shader_param/albedo_1 = Color( 0.490196, 0.223529, 0.733333, 1 )
shader_param/albedo_2 = Color( 0.14902, 0.0235294, 0.196078, 1 )
shader_param/specular = 0.5
shader_param/speed = 0.14
shader_param/movement_noise = SubResource( 19 )
shader_param/mask = ExtResource( 1 )
