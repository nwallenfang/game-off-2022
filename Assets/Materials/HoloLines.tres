[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=5]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode unshaded,async_visible,blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;

float clamp_and_map(float value, float istart, float istop, float ostart, float ostop) {
    value = clamp(value, istart, istop);
    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
}

float clamp_map_pow(float value, float istart, float istop, float ostart, float ostop, float power) {
	float c1 = clamp_and_map(value, istart, istop, 0.0, 1.0);
	c1 = pow(abs(c1), power);
	return clamp_and_map(c1, 0.0 , 1.0, ostart, ostop);
}

float inv(float x) {
	return 1.0 - x;
}

void fragment() {
	float divider = .25;
	float dist_to_line = abs(mod(UV.x+TIME * .2, divider) - divider * .5);
	float line_mask = clamp_map_pow(dist_to_line, divider * .0039, divider * .10, 1.0, 0.0, .5);
	ALPHA = clamp(albedo.a * line_mask * float(UV.y < .5) * clamp_map_pow(UV.y, .05, .2, 0.0, 1.0, 3.5), 0.0, 1.0);
	ALBEDO = albedo.rgb;
}
"

[resource]
shader = SubResource( 5 )
shader_param/albedo = Color( 0.317647, 0.694118, 0.607843, 0.670588 )
